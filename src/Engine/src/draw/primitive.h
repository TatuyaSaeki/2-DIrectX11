//===========================================================================
//!	@file	primitive.h
//!	@brief	プリミティブ描画
//===========================================================================
#pragma once

//---------------------------------------------------------------------------
//!	@brief	下記関数を使用するのに必要
//!	@return true	正常終了
//!	@return false	エラー終了
//---------------------------------------------------------------------------
bool PRIM_Initialize();

//! @brief 解放
void PRIM_Finalize();

//===========================================================================
// OpenGL互換関数
//===========================================================================

//---------------------------------------------------------------------------
//! @brief 行列の設定
//! @param [in] matWorld ワールド行列
//---------------------------------------------------------------------------
void dxLoadMatrixf(const Matrix& matWorld);

//! @brief 行列スタックへ退避
void dxPushMatrix();

//! @brief 行列スタックから復帰
void dxPopMatrix();

//---------------------------------------------------------------------------
//! @brief 描画開始
//!	@param	[in]	type	プリミティブの種類
//---------------------------------------------------------------------------
void dxBegin(PRIMITIVE_TYPE type);

//! @brief 頂点キック (Kick)
void dxVertex3f(f32 x, f32 y, f32 z);
void dxVertex3fv(const Vector3& pos);

//! @brief カラーu8
void dxColor4ub(u8 r, u8 g, u8 b, u8 a);
void dxColor4ub(const Color& color);

//! @brief カラーf32
void dxColor4f(f32 r, f32 g, f32 b, f32 a);
void dxColor4f(const Vector4& color);

//---------------------------------------------------------------------------
//! @brief テクスチャ座標
//! @param [in] u テクスチャu座標
//! @param [in] v テクスチャv座標
//---------------------------------------------------------------------------
void dxTexCoord2f(f32 u, f32 v);

//---------------------------------------------------------------------------
//! @brief 法線
//! @param [in] v 法線
//---------------------------------------------------------------------------
void dxNormal3fv(const Vector3& v);

//! @brief 描画終了
void dxEnd();

//---------------------------------------------------------------------------
//! @brief テクスチャの設定
//! @param [in] texture 設定したいテクスチャ
//---------------------------------------------------------------------------
void dxTexture(ptr<gpu::Texture> texture);