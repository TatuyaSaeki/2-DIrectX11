//===========================================================================
//! @file	object_base.h
//! @brife	すべてのオブジェクトの元
//===========================================================================
#pragma once

//! 前方宣言
enum class RenderMode : u32;

//===========================================================================
//! @class ObjectBase
//===========================================================================
class ObjectBase
{
public:
    //-----------------------------------------------------------------------
    //!	@name	初期化
    //-----------------------------------------------------------------------
    //@{

    //! @brief コンストラクタ
    ObjectBase() = default;

    //! @brief デストラクタ
    virtual ~ObjectBase() = default;

    //@}
    //-----------------------------------------------------------------------
    //!	@name	タスク
    //-----------------------------------------------------------------------
    //@{

    //! @brief 初期化
    virtual bool initialize() = 0;

    //! @brief 更新
    virtual void update(){};
    virtual void update([[maybe_unused]] const Matrix& matParent){};

    //! @brief 描画
	virtual void render() {};
    virtual void render([[maybe_unused]] RenderMode renderMode){};

    //! @brief 解放
    virtual void cleanup() = 0;

    //! @brief ImGuiのウィンドウを表示
    virtual void showImGuiWindow(){};

    //@}
    //-----------------------------------------------------------------------
    //!	@name	設定
    //-----------------------------------------------------------------------
    //@{

	//-----------------------------------------------------------------------
    //! @brief 位置の設定
    //! @param  [in]    position    位置
	//-----------------------------------------------------------------------
    void setPosition(const Vector3& position);

	//-----------------------------------------------------------------------
    //! @brief 位置の設定
    //! @param  [in]    x    X軸の位置
    //! @param  [in]    y    Y軸の位置
    //! @param  [in]    z    Z軸の位置
	//-----------------------------------------------------------------------
    void setPosition(f32 x, f32 y, f32 z);

	//-----------------------------------------------------------------------
    //! @brief 回転角の設定
    //! @param  [in]    rotation    回転角
	//-----------------------------------------------------------------------
    void setRotation(const Vector3& rotation);

	//-----------------------------------------------------------------------
    //! @brief 回転角の設定
    //! @param  [in]    x    X軸の回転角
    //! @param  [in]    y    Y軸の回転角
    //! @param  [in]    z    Z軸の回転角
	//-----------------------------------------------------------------------
    void setRotation(f32 x, f32 y, f32 z);

	//-----------------------------------------------------------------------
    //! @brief スケールの設定
    //! @param  [in]    scale    スケール
	//-----------------------------------------------------------------------
    void setScale(const Vector3& scale);

	//-----------------------------------------------------------------------
    //! @brief スケールの設定
    //! @param  [in]    x    X軸のスケール
    //! @param  [in]    y    Y軸のスケール
    //! @param  [in]    z    Z軸のスケール
	//-----------------------------------------------------------------------
    void setScale(f32 x, f32 y, f32 z);

    //@}
    //-----------------------------------------------------------------------
    //!	@name	取得
    //-----------------------------------------------------------------------
    //@{

	//-----------------------------------------------------------------------
    //! @brief	ワールド行列取得
	//! @return ワールド行列
	//-----------------------------------------------------------------------
    Matrix getMatWorld() const;

	//-----------------------------------------------------------------------
    //! @brief	位置取得
	//! @return 位置
	//-----------------------------------------------------------------------
    Vector3 getPosition() const;

	//-----------------------------------------------------------------------
    //! @brief	回転値取得
	//! @return 回転値
	//-----------------------------------------------------------------------
    Vector3 getRotation() const;

	//-----------------------------------------------------------------------
    //! @brief	スケール値取得
	//! @return スケール値
	//-----------------------------------------------------------------------
    Vector3 getScale() const;

    //@}

protected:
    Matrix  matWorld_ = Matrix::identity();   //!< ワールド行列
    Vector3 position_ = Vector3::ZERO;        //!< 現在地
    Vector3 rotation_ = Vector3::ZERO;        //!< 回転値
    Vector3 scale_    = Vector3::ONE;         //!< スケール値
};