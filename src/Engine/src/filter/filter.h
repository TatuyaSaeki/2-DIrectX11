//===========================================================================
//! @file	filter.h
//! @brife	フィルターの基底クラス
//===========================================================================
#pragma once

//! フィルタ種類
enum class FilterType : u32
{
    GaussianBlur = 0,
    ToneMapping,

    FilterMax
};

//===========================================================================
//! @class Filter
//===========================================================================
class Filter
{
public:
    //-----------------------------------------------------------------------
    //! @name	初期化
    //-----------------------------------------------------------------------
    //@{

    //! @brief コンストラクタ
    Filter() = default;

    //! @brief デストラクタ
    virtual ~Filter() = default;

    //@}
    //-----------------------------------------------------------------------
    //! @name	タスク
    //-----------------------------------------------------------------------
    //@{

    //-----------------------------------------------------------------------
    //! @brief 初期化
    //!	@return	true	正常終了
    //!	@return	false	エラー終了
    //-----------------------------------------------------------------------
    virtual bool initialize() { return true; }

    //! @brief 開始
    virtual void begin(){};

    //! @brief 解放
    virtual void finalize(){};

    //@}
    //-----------------------------------------------------------------------
    //! タスク
    //-----------------------------------------------------------------------
    //@{

	//-----------------------------------------------------------------------
    //! @brief  フィルタタイプ取得
    //! @return 自身のフィルタタイプ
	//-----------------------------------------------------------------------
    FilterType getFilterType() const { return filterType_; }

    //@}

protected:
    FilterType filterType_;   //!< 自身のフィルタタイプ
};