//===========================================================================
//! @file	scene_cube_shadow_map.h
//!	@brief	全方位シャドウマップ
//===========================================================================
#pragma once

//===========================================================================
//!	@class SceneCubeShadowMap
//===========================================================================
class SceneCubeShadowMap : public DemoSceneBase
{
public:
	//-----------------------------------------------------------------------
    //!	@name	初期化
	//-----------------------------------------------------------------------
    //@{

    //! @brief コンストラクタ
    SceneCubeShadowMap() = default;

    //! @brief デストラクタ
    ~SceneCubeShadowMap() override = default;

    //@}

private:
	//-----------------------------------------------------------------------
    //!	@name	初期化
	//-----------------------------------------------------------------------
    //@{


	//-----------------------------------------------------------------------
    //! @brief カメラ初期化
	//! @return true  正常終了
	//! @return false エラー終了
	//-----------------------------------------------------------------------
    bool initializeCamera();

	//-----------------------------------------------------------------------
    //! @brief ライト初期化
	//! @return true  正常終了
	//! @return false エラー終了
	//-----------------------------------------------------------------------
    bool initializeLight() override;


	//-----------------------------------------------------------------------
    //! @brief モデル初期化
	//! @return true  正常終了
	//! @return false エラー終了
	//-----------------------------------------------------------------------
    bool initializeModel() override;

	//-----------------------------------------------------------------------
    //! @brief テクスチャ初期化
	//! @return true  正常終了
	//! @return false エラー終了
	//-----------------------------------------------------------------------
    bool initializeTexture() override;

    //@}

public:
	//-----------------------------------------------------------------------
    //!	@name	タスク
	//-----------------------------------------------------------------------
    //@{

	//-----------------------------------------------------------------------
    //! 初期化
	//! @return true  正常終了
	//! @return false エラー終了
	//-----------------------------------------------------------------------
    bool initialize() override;

    //! 更新
    void update(f32 deleteTime) override;

    //! 描画
    void render() override;

	//-----------------------------------------------------------------------
    //! 描画(モード指定)
	//! @param [in] renderMode 描画したいモード
	//-----------------------------------------------------------------------
    void render(RenderMode renderMode) override;

    //! 解放
    void cleanup() override;

    //@}

private:
    // モデル
    std::shared_ptr<ObjectBaseModel>  modelBox_;               //!< ボックスモデル
    std::shared_ptr<ObjectBaseModel>  modelFloor_;             //!< 床用モデル
    com_ptr<ID3D11Texture2D>          cubeMapDepthTexture_;    //!< デプステクスチャ
    com_ptr<ID3D11ShaderResourceView> cubeMapSrv_;             //!< SRV
    com_ptr<ID3D11RenderTargetView>   cubeMapRtv_;             //!< RTV
    com_ptr<ID3D11Texture2D>          cubeMapDepthTextureD_;   //!< デプステクスチャ
    com_ptr<ID3D11DepthStencilView>   cubeMapDsv_;             //!< DSV
};
