//===========================================================================
//! @file	demo_scene_manager.h
//!	@brief	デモシーン管理用クラス
//===========================================================================
#pragma once

//===========================================================================
//!	@class DemoSceneManager
//===========================================================================
class DemoSceneManager
{
public:
    //-----------------------------------------------------------------------
    //!	@name	初期化
    //-----------------------------------------------------------------------
    //@{

    //! @brief コンストラクタ
    DemoSceneManager() = default;

    //! @brief デストラクタ
    ~DemoSceneManager();

    //@}
    //-----------------------------------------------------------------------
    //!	@name	タスク
    //-----------------------------------------------------------------------
    //@{

    //-----------------------------------------------------------------------
    //! @brief 初期化
    //! @return true  正常終了
    //! @return false エラー終了
    //-----------------------------------------------------------------------
    bool initialize();

    //! @brief 更新
    void update(f32 deleteTime);

    //! @brief 描画
    void render();

    //-----------------------------------------------------------------------
    //! @brief 描画(描画モード指定)
    //! @param	[in]	renderMode	描画時のタイプ設定
    //-----------------------------------------------------------------------
    void render(RenderMode renderMode);

    //! @brief 解放
    void cleanup();

    //! @brief ImGui描画
    void showImGuiWindow();

    //@}
    //-----------------------------------------------------------------------
    //!	@name	タスク
    //-----------------------------------------------------------------------
    //@{

    //-----------------------------------------------------------------------
    //! @brief  現在のシーンタイプ取得
    //! @return 現在のシーンタイプ
    //-----------------------------------------------------------------------
    DemoSceneType getActiveSceneType() const;

    //@}

private:
    //-----------------------------------------------------------------------
    //! @brief シーン作成
    //!	return 次のシーンのポインタ
    //-----------------------------------------------------------------------
    DemoSceneBase* createScene();

private:
    std::unique_ptr<KeyInput>      inputKey_;                                //!< キー入力用
    std::unique_ptr<DemoSceneBase> activeScene_;                             //!< 現在のシーン
    DemoSceneType                  activeSceneType_ = DemoSceneType::None;   //!< 現在のシーンのタイプ
    DemoSceneType                  nextSceneType_   = DemoSceneType::None;   //!< 次のシーンのタイプ
    bool                           sceneReset_      = false;                 //!< シーン終了フラグ
    bool                           sceneNext_       = false;                 //!< 次のシーン

    ShadowMap shadowMap_;   //!< シャドウマップ
};