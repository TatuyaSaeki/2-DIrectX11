//===========================================================================
//! @file	scene_demo.h
//!	@brief	デモシーン
//===========================================================================
#pragma once

//===========================================================================
//!	@class SceneDemo
//===========================================================================
class SceneDemo : public SceneBase
{
public:
    //------------------------------------------------------------------------
    //!	@name	初期化
    //------------------------------------------------------------------------
    //@{

    //! @brief コンストラクタ
	SceneDemo();

    //! @brief デストラクタ
    ~SceneDemo() = default;

    //@}
    //------------------------------------------------------------------------
    //!	@name	タスク
    //------------------------------------------------------------------------
    //@{

	//-----------------------------------------------------------------------
    //! @brief 初期化
	//! @return true  正常終了
	//! @return false エラー終了
	//-----------------------------------------------------------------------
    bool initialize() override;

    //! @brief 更新
    void update(f32 deleteTime) override;

    //! @brief 描画
    void render() override;

	//-----------------------------------------------------------------------
    //! @brief 描画(描画モード指定)
	//! @param	[in]	renderMode	描画時のタイプ設定
	//-----------------------------------------------------------------------
    void render(RenderMode renderMode) override;

    //! @brief 解放
    void cleanup() override;

	//! @brief ImGui描画
	void showImGuiWindow() override;

    //@}

private:
    std::unique_ptr<DemoSceneManager> demoSceneManager_;	//!< デモシーン用マネージャー
};
