//===========================================================================
//! @file	renderigConfig.h
//!	@brief	描画設定管理クラス
//===========================================================================
#pragma once

//! 前方宣言
enum class IBLTextureType : u32;
enum class DemoSceneType : u32;

//===========================================================================
//! @class RenderingConfig
//===========================================================================
class RenderingConfig
{
private:
    //-----------------------------------------------------------------------
    //! @name 初期化
    //-----------------------------------------------------------------------
    //@{

    //! @brief コンストラクタ (シングルトンなのでprivate)
    RenderingConfig() = default;

public:
    //! @brief デストラクタ
    ~RenderingConfig() = default;

    //@}

public:
    //-----------------------------------------------------------------------
    //! @name タスク
    //-----------------------------------------------------------------------
    //@{

	//-----------------------------------------------------------------------
    //! @brief  インスタンス取得
	//! @return 参照インスタンス
	//-----------------------------------------------------------------------
    static RenderingConfig& getInstance();

	//-----------------------------------------------------------------------
    //! @brief 初期化
	//! @return true  正常終了
	//! @return false エラー終了
	//-----------------------------------------------------------------------
    bool initialize();

    //! @brief 更新
    void update();

    //! @brief 解放
    void cleanup();

	//-----------------------------------------------------------------------
    //! @brief ImGui描画
	//! @param [in] 現在のデモシーンタイプ
	//-----------------------------------------------------------------------
    void showImGuiWindow(DemoSceneType sceneType);

private:
    //! @brief ImGui描画(ライト)
    void showImGuiLight();

    //! @brief ImGui描画(海)
    void showImGuiSea();

    //! @brief ImGui描画(水)
    void showImGuiWater();

	//! @brief ImGuiのIBL同じ処理をまとめてるだけ
	void ImGuiAbridgeIBL();

    //@}
    //-----------------------------------------------------------------------
    //! @name 設定
    //-----------------------------------------------------------------------
    //@{
public:

	//-----------------------------------------------------------------------
    //! @brief 使用したいIBLテクスチャタイプ設定
	//! @param [in] type 使用したいIBLテクスチャタイプ
	//-----------------------------------------------------------------------
    void setIBLTextureType(IBLTextureType type);

	//-----------------------------------------------------------------------
    //! @brief スカイボックス有効,無効
	//! @param [in] flag    true=有効化, false=無効化
	//-----------------------------------------------------------------------
    void isSkyBox(bool flag);

	//-----------------------------------------------------------------------
    //! @brief IBL有効,無効
	//! @param [in] flag    true=有効化, false=無効化
	//-----------------------------------------------------------------------
    void isIBL(bool flag);

	//-----------------------------------------------------------------------
    //! @brief シャドウマップ有効,無効
	//! @param [in] flag    true=有効化, false=無効化
	//-----------------------------------------------------------------------
    void isShadowmapping(bool flag);

	//-----------------------------------------------------------------------
    //! @brief 環境反射有効,無効
	//! @param [in] flag    true=有効化, false=無効化
	//-----------------------------------------------------------------------
    void isReflection(bool flag);

	//-----------------------------------------------------------------------
    //! @brief トーンマップ有効,無効
	//! @param [in] flag    true=有効化, false=無効化
	//-----------------------------------------------------------------------
    void isTonemapping(bool flag);

	//-----------------------------------------------------------------------
    //! @brief 霧有効,無効
	//! @param [in] flag    true=有効化, false=無効化
	//-----------------------------------------------------------------------
    void isFog(bool flag);

	//-----------------------------------------------------------------------
    //! @brief ワイヤーフレーム有効,無効
	//! @param [in] flag    true=有効化, false=無効化
	//-----------------------------------------------------------------------
    void isWireFrame(bool flag);

	//-----------------------------------------------------------------------
    //! @brief グレアフィルター有効,無効
	//! @param [in] flag    true=有効化, false=無効化
	//-----------------------------------------------------------------------
    void isGlare(bool flag);

    //@}
    //-----------------------------------------------------------------------
    //! @name 取得
    //-----------------------------------------------------------------------
    //@{

	//-----------------------------------------------------------------------
    //! @brief IBLテクスチャタイプ取得
	//! @return 現在のIBLテクスチャタイプ
	//-----------------------------------------------------------------------
    IBLTextureType getIBLTextureType() const;

	//-----------------------------------------------------------------------
    //! @brief スカイボックス
	//! @return true  有効状態
	//! @return false 無効状態
	//-----------------------------------------------------------------------
    bool isSkyBox() const;

	//-----------------------------------------------------------------------
    //! @brief IBL
	//! @return true  有効状態
	//! @return false 無効状態
	//-----------------------------------------------------------------------
    bool isIBL() const;

	//-----------------------------------------------------------------------
    //! @brief シャドウマップ
	//! @return true  有効状態
	//! @return false 無効状態
	//-----------------------------------------------------------------------
    bool isShadowmapping() const;

	//-----------------------------------------------------------------------
    //! @brief 環境反射
	//! @return true  有効状態
	//! @return false 無効状態
	//-----------------------------------------------------------------------
    bool isReflection() const;

	//-----------------------------------------------------------------------
    //! @brief トーンマップ
	//! @return true  有効状態
	//! @return false 無効状態
	//-----------------------------------------------------------------------
    bool isToonmapping() const;

	//-----------------------------------------------------------------------
    //! @brief 霧
	//! @return true  有効状態
	//! @return false 無効状態
	//-----------------------------------------------------------------------
    bool isFog() const;

	//-----------------------------------------------------------------------
    //! @brief ワイヤーフレーム
	//! @return true  有効状態
	//! @return false 無効状態
	//-----------------------------------------------------------------------
    bool isWireFrame() const;

	//-----------------------------------------------------------------------
    //! @brief  グレアフィルター
	//! @return true  有効状態
	//! @return false 無効状態
	//-----------------------------------------------------------------------
    bool isGlare() const;

    //@}

private:
    DemoSceneType  currentSceneType_;   //!< 現在のシーンタイプ
    IBLTextureType textureType_;        //!< IBLテクスチャタイプ
    IBLTextureType tmpTextureType_;     //!< 保存用テクスチャタイプ

    bool isSkyBox_        = true;    //!< スカイボックス
    bool isIBL_           = true;    //!< IBL
    bool isTonemapping_   = true;    //!< トーンマップ
    bool isShadowmapping_ = true;    //!< シャドウマップ
    bool isToonmapping_   = false;   //!< トゥーンマップ
    bool isGlare_         = false;   //!< グレアフィルター
    bool isReflection_    = false;   //!< 反射マップ
    bool isFog_           = false;   //!< 霧
    bool isWireFrame_     = false;   //!< ワイヤーフレーム
};

//---------------------------------------------------------------------------
//! アクセスインターフェイス
//---------------------------------------------------------------------------
inline RenderingConfig& RenderConfig()
{
    return RenderingConfig::getInstance();
}